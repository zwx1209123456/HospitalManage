
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/axios.js"></script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <title>Index</title>
</head>
<body>

    <div class="x-body" id="app">
        <form class="layui-form x-center" action="" style="width:200px"></form>
        <div class="tools">
            <ul class="toolbar">
                <li><a href="#" onclick="location.href='/Classes/Add'"><span><img src="~/images/t01.png" /></span>添加</a></li>
            </ul>
        </div>
        <table class="tablelist table">
            <thead>
                <tr>
                    <th width="4%">ID</th>
                    <th width="6%">班次颜色</th>
                    <th width="6%">班次名称</th>
                    <th width="10%">上班时间</th>
                    <th width="16%">下班时间</th>
                    <th width="6%">班次类型</th>
                    <th width="18%">有效排班日</th>
                    <th width="6%">排序</th>


                </tr>
            </thead>
            <tbody id="x-img">
                <tr v-for="item in Classes">
                    <td>{{item.Id}}</td>
                    <td><input type="color" id="link" class="layui-input" v-model="ClassesColor"></td>
                    <td><input type="text" v-model="item.ClassesName" /></td>
                    <td>
                        <select v-model="item.ClasserType">
                            <option v-for="StartTime in StartTimeList" v-bind:value="StartTime">
                                {{StartTime}}
                            </option>
                        </select>
                        <select v-model="item.StartTimea1">
                            <option v-for="StartTime1 in StartTimeList1" v-bind:value="StartTime1">
                                {{StartTime1}}
                            </option>

                        </select>
                    </td>
                    <td>
                        <select v-model="item.LastTime">
                            <option v-for="LastTime in LastTimeaList" v-bind:value="LastTime">
                                {{LastTime}}
                            </option>
                        </select>
                        <select v-model="item.LastTime1">
                            <option v-for="LastTime1 in LastTimeaList1" v-bind:value="LastTime1">
                                {{LastTime1}}
                            </option>

                        </select>
                        <select v-model="item.LastTimea2">
                            <option v-for="LastTime2 in LastTimeaList2" v-bind:value="LastTime2">
                                {{LastTime2}}
                            </option>

                        </select>
                    </td>
                    <td>
                        <select v-model="item.ClasserType">
                            <option v-for="item in items" v-bind:value="item.value">{{item.text}}</option>
                        </select>
                    </td>
                    <td>
                        <label v-for="checkBox in CheckBoxs">{{checkBox}}<input type="checkbox" v-model="item.ValidClasses" v-bind:value="checkBox"  /></label>
                    </td>
                    <td><input type="text" v-model="item.Sort" /></td>
                    <td>
                        <div v-if="item.Id!=''">
                            <a href="#" v-on:click="ClassesDelete(item.Id)">删除</a>
                            <a href="#" v-on:click="ClassesUpdate(item.Id,item.ClassesColor,item.ClassesName,item.StartTime,item.LastTime,item.ClasserType,item.ValidClasses,item.Sort)">修改</a>
                        </div>
                        <div v-else>
                            <a href="#" v-on:click="add(item.Id,item.ClassesColor,item.ClassesName,item.StartTime,item.LastTime,item.ClasserType,item.ValidClasses,item.Sort)">添加</a>
                        </div>

                    </td>
                </tr>
            </tbody>
        </table>
    </div>


    <br />
    <br />
    <br />
    <script src="~/js/x-layui.js"></script>
    <script src="~/lib/layui/layui.js"></script>
    <script src="~/js/jquery2.js"></script>
    <script src="~/js/js.js"></script>





    <script>
        layui.use(['laydate', 'element', 'laypage', 'layer'], function () {
            $ = layui.jquery;
            lement = layui.element();//面包导航
            laypage = layui.laypage;//分页
            layer = layui.layer;//弹出层
        });


        /*添加*/
        function new_add(title, url, w, h) {
            x_admin_show(title, url, w, h);
        }


        // 编辑
        function new_edit(title, url, id, w, h) {
            x_admin_show(title, url, w, h);
        }
        $('.tablelist tbody tr:odd').addClass('odd');

    </script>
</body>
</html>
<script type="text/javascript">
    var vm = new Vue({
        el: "#app",
        data: {
            Classes: [],
            ClassesColor: "",
            ClassesName: "",
            StartTime: "",
            LastTime: "",
            ClasserType: "请选择",
            ValidClasses: [],
            Sort: "",
            whom: [],
            items: [{ text: '请选择', value: '请选择' }, { text: '工作班次', value: '工作班次' }, { text: '假期班次', value: '假期班次' }],
            selected: '',
            StartTimea: "",
            StartTimea1: "",
            // LastTimea: "",
            LastTime1: "",
            LastTimea2: "",
            CheckBoxs: ["周一", "周二", "周三", "周四", "周五", "周六", "周日", "工作日", "公共假日", "法定节假日"],
            StartTimeList: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', 0],
            StartTimeList1: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59'],
            LastTimeaList: ['当日', '明日'],
            LastTimeaList1: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', 0],
            LastTimeaList2: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59']

        },
        mounted() {
            this.LoadData();
        },
        methods: {
            Contain: function (array, obj) {
                if (array.indexOf(obj) >= 0)//如果要求数据类型也一致，这里可使用恒等号===
                    return true;
                return false;
            },
            LoadData: function () {
                var classes=[];
                axios.get('@Url.Action("IndexShow", "Classes")').then(
                    (response) => {
                        for (var i = 0; i < response.data.length; i++) {
                            console.log(response.data)
                            var str = response.data[i].ValidClasses;
                            alert(str)
                            str.split(',');
                            classes.push({ Id: response.data[i].Id, ClassesColor: response.data[i].ClassesColor, ClassesName: response.data[i].ClassesName, StartTime: response.data[i].StartTime, LastTime: response.data[i].LastTime, ClasserType: response.data[i].ClasserType, ValidClasses: str.split(','), Sort: response.data[i].Sort })
                        }
                        this.Classes = classes;
                        this.Classes.push({ Id: "", ClassesColor: "", ClassesName: "", StartTime: "", LastTime: "", ClasserType: "", ValidClasses: [], Sort:""});
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                }
                )
            },
            ClassesUpdates: function (Id, ClassesColor, ClassesName, StartTime, LastTime, ClasserType, ValidClasses, Sort) {
                axios.post('@Url.Action("ClassesUpdate", "Classes")', { Classes: { Id: Id, ClassesColor: ClassesColor, ClassesName: ClassesName, StartTime: StartTime, LastTime: LastTime, ClasserType: ClasserType, ValidClasses: ValidClasses, Sort: Sort, } }).then(
                    (response) => {
                        console.log(response);
                        if (response.data > 0) {

                            this.LoadData();
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });


            },
            add: function (ClassesColor, ClassesName, StartTime, LastTime, ClasserType, ValidClasses, Sort) {
                axios.post('@Url.Action("ClassesAdd", "Classes")', { Classes: { ClassesColor: ClassesColor, ClassesName: ClassesName, StartTime: StartTime, LastTime: LastTime, ClasserType: ClasserType, ValidClasses: ValidClasses, Sort: Sort } }).then(
                        (response) => {
                            console.log(response);
                            if (response.data > 0) {

                                this.LoadData();
                            }

                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
            ClassesDeletes: function (Id) {

                axios.post('@Url.Action("ClassesDelete", "Classes")', { Id: Id }).then(
                    (response) => {
                        if (response.data > 0) {
                           //alert("删除成功！！！");
                            this.LoadData();
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },
        }

    })
</script>

