
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add</title>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/axios.js"></script>
    <style>
        .searchBox {
            width: 200px;
            height: 26px;
            position: relative;
        }

        .select {
            width: 98%;
            height: 100%;
        }

        .down {
            position: absolute;
            width: 0;
            border: 9px solid transparent;
            border-top: 11px solid black;
            top: 10px;
            right: 7px;
            cursor: pointer;
        }

        .list {
            width: 100%;
        }

            .list > li {
                height: 20px;
                background: white;
                border: 1px solid lightgray;
                border-top: none;
            }
    </style>
</head>
<body>
    <div id="app">
        @*<div class="searchBox">
            <input type="text" class="select" v-model="TimeOne">
            <div class="down" v-on:click="show"></div>
            <div v-show="listShow">
                <ul class="list" v-for="(item,index) in searchData">
                    <li>
                        <input type="checkbox" :id="item" class="checkItem" :value="item" v-model="TimeOne">
                        <label :for="item">{{item}}</label>
                    </li>
                </ul>

            </div>

        </div>*@


        <table>
            <tr>
                <td>固定相连班次设置（一个班次带出令一个班次的设置）</td>
            </tr>
            <tr>
                <td>时间1</td>
                <td>

                    <select id="Select1" v-model="TimeOne">
                        <option value="请选择">--请选择--</option>
                        <option v-for="TimeOne in TimeOneList" v-bind:value="TimeOne">
                            {{TimeOne}}
                        </option>
                    </select>
                </td>
            </tr>

            <tr>
                <td>班次1</td>
                <td>
                    <select id="Select1" v-model="ClassesName">
                        <option value="请选择">--请选择--</option>
                        <option v-for="item in ClassesOneList" v-bind:value="item.Id">
                            {{item.ClassesName}}
                        </option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>时间2</td>
                <td>
                    <select id="Select1" v-model="TimeTwo">
                        <option value="请选择">--请选择--</option>
                        <option v-for="TimeTwo in TimeTwoList" v-bind:value="TimeTwo">
                            {{TimeTwo}}
                        </option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>时间3</td>
                <td>
                    <select id="Select1" v-model="TimeThree">
                        <option value="请选择">--请选择--</option>
                        <option v-for="TimeThree in TimeThreeList" v-bind:value="TimeThree">
                            {{TimeThree}}
                        </option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>班次2</td>
                <td>
                    <select id="Select1" v-model="ClassesName1">
                        <option value="请选择">--请选择--</option>
                        <option v-for="item in ClassesTwoList" v-bind:value="item.Id">
                            {{item.ClassesName}}
                        </option>
                    </select>
                </td>
            </tr>
            <tr>
                <td>序号：</td>
                <td>
                    <input id="Text1" type="text" v-model="Number" />
                </td>
            </tr>
            <tr>
                <td>
                    <a href="#" v-on:click="AddRule(TimeOne, ClassesName, TimeTwo, TimeThree, ClassesName1,Number)">保存</a>

                </td>
            </tr>
        </table>

    </div>
    <script>
        var vm = new Vue({
            el: "#app",
            data: {
                //listShow: false,
                //search: '',
                //TimeOne: [],
                //items: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],//下拉列表的选项数据，此数据可以从父组件传过来，通过props接收，接收到props数据后赋值给该数据即可
                //data1: {
                //    type: Array,
                //    default: []
                //},

                TimeOneList: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
                TimeOne:"请选择",
                ClassesOneList: [],
                ClassesName: "请选择",
                TimeTwoList: ['第二天', '隔日', '下周'],
                TimeTwo: "请选择",
                TimeThreeList: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
                TimeThree: "请选择",
                ClassesTwoList: [],
                ClassesName1: "请选择",
                Number:"",
            },
            //created() {
            //    console.log(this.data1)
            //},
            //watch: { // 监视双向绑定的数据数组
            //    TimeOne: {
            //        handler() { // 数据数组有变化将触发此函数
            //            var checkObj1 = document.querySelectorAll('.checkItem'); // 获取所有checkbox项
            //            if (this.TimeOne.length == checkObj1.length) {
            //                document.querySelector('#quan').checked = true;
            //            } else {
            //                document.querySelector('#quan').checked = false;
            //            }
            //        },
            //        deep: true // 深度监视
            //    },
            //    search: {
            //        handler() {//搜索框输入变化触发
            //            this.listShow = true;
            //        },
            //        deep: true // 深度监视
            //    }
            //},
            mounted() {
                this.GetClassesOneList();
                this.GetClassesTwoList();
                
            },
            methods: {
                AddRule: function (TimeOne, ClassesName, TimeTwo, TimeThree, ClassesName1, Number) {
                    
                    axios.post('@Url.Action("Add", "Rule")', { arrangerule: { TimeOne: TimeOne, ClassesId: ClassesName, TimeTwo: TimeTwo, TimeThree: TimeThree, ClassesIds: ClassesName1, Number: Number  } }).then(
                        (response) => {
                            if (response.data > 0) {
                                alert("保存成功")
                            }
                            else {
                                alert("已有该条规则")
                            }
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                        
                },
                ///获取班次名称
                GetClassesOneList: function () {
                     axios.get('@Url.Action("GetClasses", "Rule")').then(
                        (response) => {
                            console.log(response)
                            this.ClassesOneList = response.data;                    
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
                ///获取班次名称
                GetClassesTwoList: function () {
                     axios.get('@Url.Action("GetClasses", "Rule")').then(
                        (response) => {
                            console.log(response)
                            this.ClassesTwoList = response.data;                    
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },



            //    checkAll(e) { // 点击全选事件函数
            //        var checkObj = document.querySelectorAll('.checkItem'); // 获取所有checkbox项
            //        if (e.target.checked) { // 判定全选checkbox的勾选状态
            //            for (var i = 0; i < checkObj.length; i++) {
            //                if (!checkObj[i].checked) { // 将未勾选的checkbox选项push到绑定数组中
            //                    this.TimeOne.push(checkObj[i].value);
            //                }
            //            }
            //        } else { // 如果是去掉全选则清空checkbox选项绑定数组
            //            this.TimeOne = [];
            //        }
            //    },
            //    show() {
            //        this.listShow = !this.listShow;
            //        if (this.listShow == true) {
            //            this.TimeOne = [];
            //        }

            //    },
           
            //computed: {
            //    searchData: function () {
            //        var search1 = this.search;
            //        if (search1) {
            //            return this.items.filter(function (product) {
            //                return Object.keys(product).some(function (key) {
            //                    return String(product[key]).toLowerCase().indexOf(search1) > -1
            //                })
            //            })
            //        }
            //        return this.items;
            //    }


            //    }
            },
        })
         
    </script>
</body>
</html>
