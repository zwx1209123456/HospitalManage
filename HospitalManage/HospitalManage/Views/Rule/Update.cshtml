
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Show</title>
    <script src="~/Scripts/axios.js"></script>
    <script src="~/Scripts/vue.js"></script>
</head>
<body>
    <div id="app">
        <table class="table-bordered border:1px">
            <tr>
                <td>编号</td>
                <td>时间1</td>
                <td>班次1</td>
                <td>时间2</td>
                <td>时间3</td>
                <td>班次2</td>
                <td>是否生效</td>
                <td>序号</td>
                <td>操作</td>
            </tr>
            <tr v-for="(contact,key,index) in RuleList">
                <td><input id="Text1" type="text" v-model="contact.Id" style="border:0" /></td>
                <td>
                    <div class="searchBox">
                        <input type="text" class="select" v-model="contact.TimeOne">
                        <div class="down" v-on:click="show"></div>
                        <div v-show="listShow">
                            <ul class="list" v-for="(item,index) in TimeOneList">
                                <li>
                                    <input type="checkbox" :id="item" class="checkItem" :value="item" v-model="TimeOne">
                                    <label :for="item">{{item}}</label>
                                </li>
                            </ul>

                        </div>

                    </div>
                </td>
                <td>
                    <select id="Select1" v-model="contact.ClassesId">
                        <option value="请选择">--请选择--</option>
                        <option v-for="item in ClassesOneList" v-bind:value="item.Id">
                            {{item.ClassesName}}
                        </option>
                    </select>
                </td>
                <td>
                    <select id="Select1" v-model="contact.TimeTwo">
                        <option value="请选择">--请选择--</option>
                        <option v-for="TimeTwo in TimeTwoList" v-bind:value="TimeTwo">
                            {{TimeTwo}}
                        </option>
                    </select>
                </td>
                <td>
                    <select id="Select1" v-model="contact.TimeThree">
                        <option value="请选择">--请选择--</option>
                        <option v-for="TimeThree in TimeThreeList" v-bind:value="TimeThree">
                            {{TimeThree}}
                        </option>
                    </select>
                </td>
                <td>
                    <select id="Select1" v-model="contact.ClassesIds">
                        <option value="请选择">--请选择--</option>
                        <option v-for="item in ClassesTwoList" v-bind:value="item.Id">
                            {{item.ClassesName}}
                        </option>
                    </select>
                </td>
                <td>
                    <input id="Text1" type="text" v-model="contact.IsEnabled" style="border:0" />

                </td>
                <td>
                    <input id="Text1" type="text" v-model="contact.Number" style="border:0" />

                </td>
                <td>
                    <div v-if="contact.Id!=''">
                        <a href="javascript:void(0)" v-on:click="UpdateUsers(contact.Id,contact.DepartmentID,contact.UserName, contact.UserNumber,contact.DutyID,contact.TierID, contact.AnnualDay, contact.EntryTime)">修改</a>

                    </div>

                </td>
            </tr>
        </table>
    </div>
    <script>
        var vm = new Vue({
            el: "#app",
            data: {
               Id:"",
                RuleList: [],
                TimeOneList: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
                TimeOne: "请选择",
                ClassesOneList: [],
                ClassesName: "请选择",
                TimeTwoList: ['第二天', '隔日', '下周'],
               
                TimeThreeList: ['周一', '周二', '周三', '周四', '周五', '周六', '周日'],
                TimeThree: "请选择",
                ClassesTwoList: [],
                ClassesName1: "请选择",
            },
            created() {
                console.log(this.data1)
            },
            watch: { // 监视双向绑定的数据数组
                TimeOneList: {
                    handler() { // 数据数组有变化将触发此函数
                        var checkObj1 = document.querySelectorAll('.checkItem'); // 获取所有checkbox项
                        if (this.TimeOne.length == checkObj1.length) {
                            document.querySelector('#quan').checked = true;
                        } else {
                            document.querySelector('#quan').checked = false;
                        }
                    },
                    deep: true // 深度监视
                },
                search: {
                    handler() {//搜索框输入变化触发
                        this.listShow = true;
                    },
                    deep: true // 深度监视
                }
            },
            mounted() {
                this.GetClassesOneList();
                this.GetClassesTwoList();
                this.ShowRule();
            },
            methods: {
                ShowRule: function () {
                    axios.get('@Url.Action("Shows", "Rule")').then(
                       
                        (response) => {
                            
                            console.log(response.data)
                            this.RuleList = response.data;
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
                DeleteRule: function (Id) {
                        axios.post('@Url.Action("Delete", "Rule")', { Id: Id }).then(
                        (response) => {
                            if (response.data > 0) {
                                alert("删除成功")
                                this.ShowRule();
                            }
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
                  ///获取班次名称
                GetClassesOneList: function () {
                     axios.get('@Url.Action("GetClasses", "Rule")').then(
                        (response) => {                           
                            this.ClassesOneList = response.data;                            
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
                ///获取班次名称
                GetClassesTwoList: function () {
                     axios.get('@Url.Action("GetClasses", "Rule")').then(
                        (response) => {                            
                            this.ClassesTwoList = response.data;                                  
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },

                checkAll(e) { // 点击全选事件函数
                    var checkObj = document.querySelectorAll('.checkItem'); // 获取所有checkbox项
                    if (e.target.checked) { // 判定全选checkbox的勾选状态
                        for (var i = 0; i < checkObj.length; i++) {
                            if (!checkObj[i].checked) { // 将未勾选的checkbox选项push到绑定数组中
                                this.TimeOneList.push(checkObj[i].value);
                            }
                        }
                    } else { // 如果是去掉全选则清空checkbox选项绑定数组
                        this.TimeOneList = [];
                    }
                },
                show() {
                    this.listShow = !this.listShow;
                    if (this.listShow == true) {
                        this.TimeOne = [];
                    }

                },

            }
        })
    </script>
</body>
</html>
