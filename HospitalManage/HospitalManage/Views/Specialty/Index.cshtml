
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/Scripts/axios.min.js"></script>
    <style>
        .page-bar {
            margin: 40px;
        }

        ul, li {
            margin: 0px;
            padding: 0px;
        }

        li {
            list-style: none
        }

        .page-bar li:first-child > a {
            margin-left: 0px
        }

        .page-bar a {
            border: 1px solid #ddd;
            text-decoration: none;
            position: relative;
            float: left;
            padding: 6px 12px;
            margin-left: -1px;
            line-height: 1.42857143;
            color: #337ab7;
            cursor: pointer
        }

            .page-bar a:hover {
                background-color: #eee;
            }

            .page-bar a.banclick {
                cursor: not-allowed;
            }

        .page-bar .active a {
            color: #fff;
            cursor: default;
            background-color: #337ab7;
            border-color: #337ab7;
        }

        .page-bar i {
            font-style: normal;
            color: #d44950;
            margin: 0px 4px;
            font-size: 12px;
        }
    </style>
</head>
<body>
    <div id="app">
        <div class="tools">
            <input type="text" v-model="SpecialtyName" id="UserName" />
        <input id="Button1" type="button" value=
               "查询" v-on:click="searchUser(SpecialtyName)" />
            <ul class="toolbar">
                <li><a href="#" onclick="location.href='/Specialty/Add'"><span><img src="~/images/t01.png" /></span>添加</a></li>
            </ul>
            
        </div>
        <table style="width:810px;height:80px;text-align:center" border="1" cellspacing="0" cellpadding="0">
            <tr>
                <td width="100px">序号</td>
                <td width="100px">专业组颜色</td>
                <td width="100px">名称</td>
                <td width="100px">相关科室</td>
                <td width="100px">带教</td>
                <td width="100px">组长</td>
                <td width="130px">组员</td>
                <td width="80px">操作</td>
            </tr>
            <tr v-for="specialty in SpecialtiesList">
                <td>{{specialty.Id}}</td>
                <td>{{specialty.SpecialtyColor}}</td>
                <td>{{specialty.SpecialtyName}}</td>
                <td>{{specialty.DepartmentName}}</td>
                <td v-if="specialty.TeachingName!=null">{{specialty.TeachingName}}</td>
                <td v-else="specialty.TeachingName=null">无</td>

                <td v-if="specialty.GroupLeaderName!=null">{{specialty.GroupLeaderName}}</td>
                <td v-else="specialty.GroupLeaderName=null">无</td>
                <td v-if="specialty.GropCrewName!=null">{{specialty.GropCrewName}}</td>
                <td v-else="specialty.GropCrewName=null">无</td>

                <td>
                    <div v-if="specialty.Id!=''">
                        <a href="#" v-on:click="DeleteSpecialty(specialty.Id)">删除</a>
                        @*<a href="#" v-on:click="UpdateSpecialty(specialty.Id,specialty.SpecialtyName,specialty.SpecialtyColor,specialty.DepartmentID,specialty.GropCrew,specialty.GroupLeader,specialty.Teaching,specialty.GropCrewName,specialty.GroupLeaderName,specialty.TeachingName)">修改</a>*@
                        <a href="#" v-on:click="jump(specialty.Id)">修改</a>

                    </div>
                </td>
            </tr>
        </table>
        <div class="page-bar">
            <ul>
                <li v-if="cur>1"><a v-on:click="cur--,pageClick()">上一页</a></li>
                <li v-if="cur==1"><a class="banclick">上一页</a></li>
                <li v-for="index in indexs" v-bind:class="{ 'active': cur == index}">
                    <a v-on:click="btnClick(index)">{{ index }}</a>
                </li>
                <li v-if="cur!=all"><a v-on:click="cur++,pageClick()">下一页</a></li>
                <li v-if="cur == all"><a class="banclick">下一页</a></li>
                <li><a>共<i>{{all}}</i>页</a></li>
            </ul>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
        //表格
    var vm = new Vue({
        //提供一个在页面上已存在的 DOM 元素作为 Vue 实例的挂载目标。可以是 CSS 选择器，也可以是一个 HTMLElement 实例。
        el: "#app",
        data: {
            SpecialtyName:"",
            SpecialtiesList: [],
            all: 2, //总页数
            cur: 1//当前页码
        },
        //el 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。
        mounted() {
            this.GetSpecialtie(this.cur);
        },
        watch: {
            cur: function (oldValue, newValue) {
            }
        },
        methods: {
            searchUser: function (data) {
                axios.get('@Url.Action("GetSpecialties", "Specialty")', { params: { Page: 1, SpecialtyName: data }}).then(
                        (response) => {
                            this.SpecialtiesList = [];
                            this.cur = response.data.CurrentPage;
                            this.all = response.data.TotlePage;
                            for (var i = 0; i < response.data.Data.length; i++) {
                                this.SpecialtiesList.push(response.data.Data[i]);
                            }
                          //  this.UserList.push({ Id: "", Name: "", Sex: ""});
                        },
                        (response) => {
                            alert(response.status);
                        }
                    ).catch(function (response) {
                        alert(response);
                    });
                },
            btnClick: function (data) {//页码点击事件
                if (data != this.cur) {
                    this.cur = data;
                    this.GetSpecialtie(data);
                }
            },
            pageClick: function () {
                this.GetSpecialtie(this.cur);
            },
            GetSpecialtie: function (Id) {
                axios.get('@Url.Action("GetSpecialties", "Specialty")', { params: { Page: Id } }).then(
                    (response) => {
                        this.SpecialtiesList = [];
                        this.cur = response.data.CurrentPage;
                        this.all = response.data.TotlePage;
                        for (var i = 0; i < response.data.Data.length; i++) {
                            this.SpecialtiesList.push(response.data.Data[i]);
                        }                      
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response)
                });
            },
           
            DeleteSpecialty: function (Id) {
                axios.post('@Url.Action("Delete", "Specialty")', { Id: Id }).then(
                    (response) => {
                        if (response.data > 0) {
                            this.GetSpecialtie();
                        }
                    },
                    (response) => {
                        alert(response.status);
                    }
                ).catch(function (response) {
                    alert(response);
                });
            },
            jump: function (Id) {
                location.href = "Update?Id=" + Id;
            },            
            },
        //计算属性
        computed: {
            indexs: function () {
                var left = 1;
                var right = this.all;
                var ar = [];
                if (this.all >= 5) {
                    if (this.cur > 3 && this.cur < this.all - 2) {
                        left = this.cur - 2
                        right = this.cur + 2
                    } else {
                        if (this.cur <= 3) {
                            left = 1
                            right = 5
                        } else {
                            right = this.all
                            left = this.all - 4
                        }
                    }
                }
                while (left <= right) {
                    ar.push(left)
                    left++
                }
                return ar
            }

        }
            });
   
</script>
